{"version":3,"sources":["context/dataLoader.js","context/appContext.js","consts/colors.js","components/Sidebar/MenuItem.js","components/Tooltip/index.js","components/Sidebar/index.js","components/Layout/index.js","components/LeafletMap/layers.js","components/LeafletMap/index.js","components/Main/PopupContent.js","components/Main/index.js","components/StereoView/index.js","components/tutorial/Todo.js","components/tutorial/TodoList.js","components/tutorial/Tutorial.js","App.js","index.js"],"names":["PUBLIC_DATA_CSV_PATH","process","Headers","MenuItemName","SubMenuItemName","PhotoName","PhotoFileName","TopLeftLat","TopLeftLng","TopRightLat","TopRightLng","BottomRightLat","BottomRightLng","BottomLeftLat","BottomLeftLng","LeftPairPhotoName","RightPairPhotoName","loadCSVFile","a","fetch","response","reader","body","getReader","decoder","TextDecoder","read","result","decode","value","createPhotoObj","row","name","fileName","bounds","parseFloat","stereoPair","left","right","createSetItemObj","photos","isFloatRegex","processCSV","str","rows","headers","slice","indexOf","split","map","header","trim","values","val","reduce","obj","i","processTextToRows","errors","missingColumns","keys","Object","forEach","includes","push","length","index","message","join","test","validateRows","data","menuItems","Map","menuItemName","subMenuItemName","has","menuItem","get","sets","subMenuItem","photoObj","subMenuItemObj","set","menuItemObj","Array","from","AppContext","React","createContext","ErrorMessage","style","padding","error","AppContextProvider","children","useState","sidebarData","setSidebarData","isLoading","setIsLoading","setErrors","checkedSets","setCheckedSets","openedSidebarElements","setOpenedSidebarElements","chosenStereopair","setChosenStereopair","useEffect","fetchData","csv","Provider","colors","RiArrowDownSFillIcon","styled","RiArrowDownSFill","RiArrowUpSFillIcon","RiArrowUpSFill","CityName","div","CitySet","CitySetTitle","ListItem","ArrowContainer","ArrowIcon","open","ChecboxContainer","input","CounterContainer","MenuItem","props","useContext","find","item","checkedSetsCount","filter","cityName","onClick","prevOpened","sort","b","localeCompare","setObj","prevCheckedSets","type","onChange","checked","Tooltip","timeout","active","setActive","className","onMouseEnter","setTimeout","delay","onMouseLeave","clearInterval","direction","content","SidebarContainer","SidebarTop","IoIosArrowBackButton","IoIosArrowBack","SidebarMiddle","SearchContainer","SearchInput","IconSearchContainer","BiSearchButton","BiSearch","FiMenuButton","FiMenu","SidebarListTitle","SidebarMainTitle","SidebarContentList","Sidebar","isOpen","setIsOpen","search","setSearch","searchRef","useRef","filteredSidebarData","toLocaleUpperCase","handleSearch","current","height","overflowY","ref","placeholder","autoComplete","onKeyUp","Layout","position","top","zIndex","width","OpenStreetMap","TileLayer","attribution","url","defaultCenter","MapContainerStyled","MapContainer","maxBounds","LatLngBounds","LatLng","LeafletMap","center","zoom","zoomSnap","minZoom","maxBoundsViscosity","zoomControl","ScaleControl","PopupInfoContainer","PhotoTitle","h3","PhotoSetInfo","Subheading","h4","ButtonsContainer","LinkButton","Link","PopupContent","photo","handleClick","leftPhotoName","rightPhotoName","number","to","Main","selectedPolygon","setSelectedPolygon","myMap","setMyMap","groupRef","prevSelectedPolygon","found","getBounds","isValid","fitBounds","whenReady","event","target","ZoomControl","FeatureGroup","Polygon","positions","eventHandlers","click","pathOptions","color","Popup","PUBLIC_IMAGES","ArrowBackButton","MdArrowBack","BackToMainPageControl","ControlButton","button","SwitchStereoViewTypeButton","SwitchStereoViewTypeIcon","HiOutlineSwitchHorizontal","ViewTypeInfo","SwitchStereoViewTypeControl","isReversed","FullscreenButton","FullscreenIcon","BiFullscreen","FullScreenControl","StereoView","leftMap","setLeftMap","rightMap","setRightMap","setIsReversed","containerRef","leftImageRef","rightImageRef","handleSwitchStereoViewClick","handleRequestFullscreen","document","fullscreenElement","exitFullscreen","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","sync","leftImage","L","imageOverlay","rotated","rightImage","clearLayers","addTo","display","Todo","todo","toggleTodo","complete","id","TodoList","todos","LOCAL_STORAGE_KEY","Tutorial","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","justifyContent","flexDirection","newTodos","e","prevTodos","Date","now","Container","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"gVACMA,EAAoB,UAAMC,UAAN,kBAEpBC,EAAU,CACdC,aAAc,iBACdC,gBAAiB,oBACjBC,UAAW,aACXC,cAAe,kBACfC,WAAY,cACZC,WAAY,cACZC,YAAa,eACbC,YAAa,eACbC,eAAgB,kBAChBC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,kBAAmB,6BACnBC,mBAAoB,+BAITC,EAAW,uCAAG,kCAAAC,EAAA,sEACFC,MAAMnB,GADJ,cACnBoB,EADmB,OAEnBC,EAASD,EAASE,KAAKC,YACvBC,EAAU,IAAIC,YAAY,SAHP,SAIJJ,EAAOK,OAJH,cAInBC,EAJmB,yBAMlBH,EAAQI,OAAOD,EAAOE,QANJ,2CAAH,qDAUlBC,EAAiB,SAACC,GACtB,MAAO,CACLC,KAAMD,EAAI7B,EAAQG,WAClB4B,SAAUF,EAAI7B,EAAQI,eACtB4B,OAAQ,CACN,CACEC,WAAWJ,EAAI7B,EAAQK,aACvB4B,WAAWJ,EAAI7B,EAAQM,cAEzB,CACE2B,WAAWJ,EAAI7B,EAAQO,cACvB0B,WAAWJ,EAAI7B,EAAQQ,eAEzB,CACEyB,WAAWJ,EAAI7B,EAAQS,iBACvBwB,WAAWJ,EAAI7B,EAAQU,kBAEzB,CACEuB,WAAWJ,EAAI7B,EAAQW,gBACvBsB,WAAWJ,EAAI7B,EAAQY,kBAG3BsB,WAAY,CACVC,KAAMN,EAAI7B,EAAQa,oBAAsB,KACxCuB,MAAOP,EAAI7B,EAAQc,qBAAuB,QAM1CuB,EAAmB,SAACR,GACxB,MAAO,CACLC,KAAMD,EAAI7B,EAAQE,iBAClBoC,OAAQ,CAACV,EAAeC,MA4BtBU,EAAe,qBAoJRC,EAAa,SAACC,GACzB,IAAMC,EA7KkB,SAACD,GACzB,IAGME,EAAUF,EACbG,MAAM,EAAGH,EAAII,QAJI,OAKjBC,MAJe,KAKfC,KAAI,SAACC,GAAD,OAAYA,EAAOC,UAI1B,OAFaR,EAAIG,MAAMH,EAAII,QARP,MAQ8B,GAAGC,MARjC,MAURC,KAAI,SAAClB,GAEf,IAAMqB,EAASrB,EAAIiB,MAXH,KAWoBC,KAAI,SAACI,GAAD,OAASA,EAAIF,UAMrD,OALmBN,EAAQS,QAAO,SAACC,EAAKL,EAAQM,GAG9C,OADAD,EAAIL,GAAUE,EAAOI,GACdD,IACN,OA2JQE,CAAkBd,GAGzBe,EAtJa,SAACd,GACpB,IAAMc,EAAS,GAGTC,EAAiB,GACjBC,EAAOC,OAAOD,KAAKhB,EAAK,IA0I9B,OAzIAiB,OAAOT,OAAOlD,GAAS4D,SAAQ,SAACZ,GACzBU,EAAKG,SAASb,IACjBS,EAAeK,KAAKd,MAGpBS,EAAeM,QACjBP,EAAOM,KAAK,CACVE,MAAO,EACPC,QAAQ,yCAAD,OAAiCR,EAAeS,KAAK,QAArD,OAKXxB,EAAKkB,SAAQ,SAAC/B,EAAKyB,GACjB,IAAMU,EAAQV,EAAI,EACbzB,EAAI7B,EAAQC,eACfuD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQC,aAAd,2CAGN4B,EAAI7B,EAAQE,kBACfsD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQE,gBAAd,2CAGN2B,EAAI7B,EAAQG,YACfqD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQG,UAAd,2CAGN0B,EAAI7B,EAAQI,gBACfoD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQI,cAAd,2CAGNyB,EAAI7B,EAAQK,YAKLkC,EAAa4B,KAAKtC,EAAI7B,EAAQK,cACxCmD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQK,WAAd,2EAPTmD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQK,WAAd,2CASNwB,EAAI7B,EAAQM,YAKLiC,EAAa4B,KAAKtC,EAAI7B,EAAQM,cACxCkD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQM,WAAd,2EAPTkD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQM,WAAd,2CASNuB,EAAI7B,EAAQO,aAKLgC,EAAa4B,KAAKtC,EAAI7B,EAAQO,eACxCiD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQO,YAAd,2EAPTiD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQO,YAAd,2CASNsB,EAAI7B,EAAQQ,aAKL+B,EAAa4B,KAAKtC,EAAI7B,EAAQQ,eACxCgD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQQ,YAAd,2EAPTgD,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQQ,YAAd,2CASNqB,EAAI7B,EAAQS,gBAKL8B,EAAa4B,KAAKtC,EAAI7B,EAAQS,kBACxC+C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQS,eAAd,2EAPT+C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQS,eAAd,2CASNoB,EAAI7B,EAAQU,gBAKL6B,EAAa4B,KAAKtC,EAAI7B,EAAQU,kBACxC8C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQU,eAAd,2EAPT8C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQU,eAAd,2CASNmB,EAAI7B,EAAQW,eAKL4B,EAAa4B,KAAKtC,EAAI7B,EAAQW,iBACxC6C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQW,cAAd,2EAPT6C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQW,cAAd,2CASNkB,EAAI7B,EAAQY,eAKL2B,EAAa4B,KAAKtC,EAAI7B,EAAQY,iBACxC4C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQY,cAAd,2EAPT4C,EAAOM,KAAK,CACVE,QACAC,QAAQ,IAAD,OAAMjE,EAAQY,cAAd,8CAWN4C,EAOQY,CAAa1B,GAG5B,GAAIc,EAAOO,OACT,MAAO,CAAEM,KAAM,KAAMb,UAGvB,IAAMc,EAAY,IAAIC,IAiDtB,OA/CA7B,EAAKkB,SAAQ,SAAC/B,GACZ,IAAM2C,EAAe3C,EAAI7B,EAAQC,cAC3BwE,EAAkB5C,EAAI7B,EAAQE,iBAEpC,GAAIoE,EAAUI,IAAIF,GAAe,CAE/B,IAAMG,EAAWL,EAAUM,IAAIJ,GAE/B,GAAIG,EAASE,KAAKH,IAAID,GAAkB,CAEtC,IAAMK,EAAcH,EAASE,KAAKD,IAAIH,GAGhCM,EAAWnD,EAAeC,GAEhCiD,EAAYxC,OAAOwB,KAAKiB,OACnB,CAGL,IAAMC,EAAiB3C,EAAiBR,GAGxC8C,EAASE,KAAKI,IAAIR,EAAiBO,QAEhC,CAGL,IAAME,EAAc,CAClBpD,KAAM0C,EACNK,KAAM,IAAIN,KAGNS,EAAiB3C,EAAiBR,GAExCqD,EAAYL,KAAKI,IAAIR,EAAiBO,GAEtCV,EAAUW,IAAIT,EAAcU,OAWzB,CAAEb,KANIc,MAAMC,KAAKd,EAAUpB,UAAUH,KAAI,SAAC4B,GAAD,mBAAC,eAC5CA,GAD2C,IAE9CE,KAAMM,MAAMC,KAAKT,EAASE,KAAK3B,eAIlBM,W,OCzSJ6B,EAAaC,IAAMC,cAAc,cAExCC,EAAe,SAAC,GAAgB,IAAdhC,EAAa,EAAbA,OACtB,OACE,sBAAKiC,MAAO,CAAEC,QAAS,SAAvB,UACE,6BAAK,4EACL,6BAAK,wCACJlC,EAAOT,KAAI,SAAA4C,GACV,OAAO,gCAAMA,EAAM3B,MAAZ,KAAqB2B,EAAM1B,kBAM7B2B,EAAqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,EAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOtC,EAAP,KAAe2C,EAAf,KACA,EAAsCL,mBAAS,IAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA0DP,mBAAS,IAAnE,mBAAOQ,EAAP,KAA8BC,EAA9B,KACA,EAAgDT,qBAAhD,mBAAOU,EAAP,KAAyBC,EAAzB,KAgBA,GAdAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,kCAAA3F,EAAA,sEACED,IADF,OACV6F,EADU,SAESpE,EAAWoE,GAA5BvC,EAFQ,EAERA,KAAMb,EAFE,EAEFA,OAEd2C,EAAU3C,GACVwC,EAAe3B,GACf6B,GAAa,GANG,2CAAH,qDASfA,GAAa,GACbS,MACC,IAECV,EACF,MAAO,kBAGT,GAAIzC,EAAOO,OACT,OAAO,cAAC,EAAD,CAAcP,OAAQA,IAG/B,IAAM7B,EAAQ,CACZoE,YAAaA,EACbK,YAAaA,EACbC,eAAgBA,EAChBC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,iBAAkBA,EAClBC,oBAAqBA,GAEvB,OAAO,cAACpB,EAAWwB,SAAZ,CAAqBlF,MAAOA,EAA5B,SAAoCkE,K,QCxDhCiB,EACF,UADEA,EAEF,UAFEA,EAGF,UAHEA,EAIF,UAJEA,EAKE,U,QCCTC,EAAuBC,YAAOC,IAAPD,CAAH,2EACfF,GAKLI,EAAqBF,YAAOG,IAAPH,CAAH,2EACbF,GAKLM,EAAWJ,IAAOK,IAAV,0OAaRC,EAAUN,IAAOK,IAAV,2OAMcP,GAOrBS,EAAeP,IAAOK,IAAV,qDAIZG,EAAWR,IAAOK,IAAV,4JAODP,GAIPW,EAAiBT,IAAOK,IAAV,kDAIdK,GAAY,SAAC,GACjB,OAD8B,EAAXC,KACL,cAACT,EAAD,IAAyB,cAACH,EAAD,KAGnCa,GAAmBZ,IAAOa,MAAV,mDAIhBC,GAAmBd,IAAOK,IAAV,+SAQNP,GAQD,SAASiB,GAASC,GAC/B,MAKIC,qBAAW5C,GAJbe,EADF,EACEA,YACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,sBACAC,EAJF,EAIEA,yBAGIoB,EAAOrB,EAAsB4B,MAAK,SAACC,GAAD,OAAUA,IAASH,EAAMlG,QAkCjE,IAAMsG,EAAmBhC,EAAYiC,QACnC,SAACpD,GAAD,OAASA,EAAIqD,WAAaN,EAAMlG,QAChCiC,OAEF,OACE,eAACqD,EAAD,WACE,eAACI,EAAD,CAAUe,QAAS,kBArCFD,EAqCoBN,EAAMlG,UApC7CyE,GAAyB,SAACiC,GACxB,OAAIA,EAAWN,MAAK,SAACC,GAAD,OAAUA,IAASG,KAE9BE,EAAWH,QAAO,SAACF,GAAD,OAAUA,IAASG,KAGtC,GAAN,mBAAWE,GAAX,CAAuBF,OAP7B,IAAqBA,GAqCjB,UACGN,EAAMlG,OACJsG,GACD,cAACN,GAAD,UAAmBM,IAErB,cAACX,EAAD,YACKO,EAAMnD,KAAKd,QAAU,cAAC,GAAD,CAAW4D,KAAMA,SAG5CA,GACC,eAACL,EAAD,WACE,cAACC,EAAD,kDAECS,EAAMnD,KACJ4D,MAAK,SAACzH,EAAG0H,GAAJ,OAAU1H,EAAEc,KAAK6G,cAAcD,EAAE5G,SACtCiB,KAAI,SAACoF,GAAD,OACH,eAACX,EAAD,CAEEe,QAAS,kBA3CMD,EA2CoBN,EAAMlG,KA3ChB8G,EA2CsBT,OA1C3D9B,GAAe,SAACwC,GAEd,OACEA,EAAgBX,MACd,SAACC,GAAD,OAAUA,EAAKG,WAAaA,GAAYH,EAAKrG,OAAS8G,EAAO9G,QAIxD+G,EAAgBR,QACrB,SAACF,GAAD,QAAYA,EAAKG,WAAaA,GAAYH,EAAKrG,OAAS8G,EAAO9G,SAI3D,GAAN,mBAAW+G,GAAX,4BAAiCD,GAAjC,IAAyCN,kBAd/C,IAA6BA,EAAUM,GAyC3B,UAIE,cAAChB,GAAD,CACEkB,KAAK,WACLC,SAAU,aACVC,UACI5C,EAAY8B,MACZ,SAACjD,GAAD,OACEA,EAAIqD,WAAaN,EAAMlG,MAAQmD,EAAInD,OAASqG,EAAKrG,UAIxDqG,EAAKrG,OAbDqG,EAAKrG,e,mEC/GXmH,I,MAtCC,SAACjB,GACf,IAAIkB,EACJ,EAA4BpD,oBAAS,GAArC,mBAAOqD,EAAP,KAAeC,EAAf,KAgBA,OACE,sBACEC,UAAU,kBAEVC,aAlBY,WAEdJ,EAAUK,YAAW,WACnBH,GAAU,KACTpB,EAAMwB,OAAS,MAgBhBC,aAbY,WAEdC,cAAcR,GAEdE,GAAU,IAIV,UAQGpB,EAAMnC,SACNsD,GACC,qBAAKE,UAAS,sBAAiBrB,EAAM2B,WAAa,OAAlD,SAEG3B,EAAM4B,eCxBXC,GAAmB7C,IAAOK,IAAV,0NAUhByC,GAAa9C,IAAOK,IAAV,wGAGaP,GAGvBiD,GAAuB/C,YAAOgD,KAAPhD,CAAH,oMACfF,EAQEA,GAIPmD,GAAgBjD,IAAOK,IAAV,2EAKb6C,GAAkBlD,IAAOK,IAAV,sNACLP,GAYVqD,GAAcnD,IAAOa,MAAV,uNAENf,GAYLsD,GAAsBpD,IAAOK,IAAV,uSACdP,EAWOA,GAKZuD,GAAiBrD,YAAOsD,KAAPtD,CAAH,6EACTF,GAKLyD,GAAevD,YAAOwD,KAAPxD,CAAH,oQACPF,EAUEA,GAIP2D,GAAmBzD,IAAOK,IAAV,mJAKXP,GAGL4D,GAAmB1D,IAAOK,IAAV,+MAKXP,GAOL6D,GAAqB3D,IAAOK,IAAV,mDAIT,SAASuD,KACtB,IAAQ7E,EAAgBkC,qBAAW5C,GAA3BU,YACR,EAA4BD,oBAAS,GAArC,mBAAO+E,EAAP,KAAeC,EAAf,KACA,EAA4BhF,mBAAS,IAArC,mBAAOiF,EAAP,KAAeC,EAAf,KACMC,EAAYC,iBAAOH,GAEnBI,EAAsBpF,EACzB0C,MAAK,SAACzH,EAAG0H,GAAJ,OAAU1H,EAAEc,KAAK6G,cAAcD,EAAE5G,SACtCuG,QAAO,SAACF,GAAD,OACNA,EAAKrG,KAAKsJ,oBAAoBvH,SAASkH,EAAOK,wBAIlD,SAASC,IACP,IAAM1J,EAAQsJ,EAAUK,QAAQ3J,MAChCqJ,EAAUrJ,GAUZ,OAAKkJ,EASH,qBAAKpF,MAAO,CAAE8F,OAAQ,QAASC,UAAW,UAA1C,SACE,eAAC3B,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,CAASH,UAAW,QAASC,QAAS,yBAAtC,SACE,cAACG,GAAD,CAAsBxB,QAnBhC,WACEuC,GAAU,QAoBJ,cAACJ,GAAD,sCAEF,eAACT,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CACEsB,IAAKR,EACLnJ,KAAK,SACL4J,YAAY,8BACZC,aAAa,MACbC,QAASP,IAEX,cAACjB,GAAD,CAAqBtB,KAAK,SAASP,QAAS8C,EAA5C,SACE,cAAChB,GAAD,SAGJ,cAACI,GAAD,+CAEF,cAACE,GAAD,UACGQ,EAAoBpI,KAAI,SAACoF,GAAD,OACvB,cAACJ,GAAD,CAA0BjG,KAAMqG,EAAKrG,KAAM+C,KAAMsD,EAAKtD,MAAvCsD,EAAKrG,gBAhC1B,cAAC,GAAD,CAAS6H,UAAW,QAASC,QAAS,2BAAtC,SACE,cAACW,GAAD,CAAchC,QAAS,kBAAMuC,GAAU,QC9JhC,SAASe,GAAT,GAA+B,IAAbhG,EAAY,EAAZA,SAC/B,OACE,sBAAKJ,MAAO,CAAEqG,SAAU,aAAxB,UACE,qBAAKrG,MAAO,CAAEqG,SAAU,WAAYC,IAAK,EAAG5J,KAAM,EAAG6J,OAAQ,KAA7D,SACE,cAACpB,GAAD,MAEF,qBAAKnF,MAAO,CAAEqG,SAAU,WAAYC,IAAK,EAAG5J,KAAM,EAAG8J,MAAO,QAA5D,SACGpG,O,8DCPF,SAASqG,KACd,OACE,cAACC,GAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDCDV,I,kBAAMC,GAAgB,CAAC,QAAS,SAE1BC,GAAqBvF,YAAOwF,KAAPxF,CAAH,+DAKlByF,GAAY,IAAIC,gBAAa,IAAIC,UAAO,IAAK,KAAM,IAAIA,WAAQ,GAAI,MAE1D,SAASC,GAAT,GAA6C,IAAvB/G,EAAsB,EAAtBA,SAAamC,EAAS,6BACzD,OACE,eAACuE,GAAD,yBACEM,OAAQP,GACRQ,KAAM,GACNC,SAAU,IACVC,QAAS,EACTP,UAAWA,GACXQ,mBAAoB,EACpBC,aAAa,GACTlF,GARN,cAUE,cAACkE,GAAD,IACA,cAACiB,GAAA,EAAD,CAAcrB,SAAU,gBACvBjG,MCvBP,IAAMuH,GAAqBpG,IAAOK,IAAV,mDAIlBgG,GAAarG,IAAOsG,GAAV,0EAKVC,GAAevG,IAAOK,IAAV,qGACWP,EAElBA,GAGL0G,GAAaxG,IAAOyG,GAAV,sDAIVC,GAAmB1G,IAAOK,IAAV,wEAKhBsG,GAAa3G,YAAO4G,IAAP5G,CAAH,04DACAF,EAELA,EA+BEA,EAKKA,GAeH,SAAS+G,GAAT,GAAuC,IAAD,IAAdC,EAAc,EAAdA,MAAO7I,EAAO,EAAPA,IACpCwB,EAAwBwB,qBAAW5C,GAAnCoB,oBACFsH,EAAc,SAACC,EAAeC,GAClC,IAAM9L,EAAO8C,EAAI3C,OAAO4F,MAAK,SAACC,GAAD,OAAUA,EAAKrG,OAASkM,KAC/C5L,EAAQ6C,EAAI3C,OAAO4F,MAAK,SAACC,GAAD,OAAUA,EAAKrG,OAASmM,KACtDxH,EAAoB,CAClBtE,OACAC,WAIJ,OACE,eAACgL,GAAD,WACE,cAACC,GAAD,UAAaS,EAAMhM,OACnB,eAACyL,GAAD,uBACYtI,EAAIqD,SADhB,IAC0B,uBAD1B,YAC0CrD,EAAInD,KAC5C,cAAC0L,GAAD,iDACCM,EAAM9L,OAAOe,KAAI,SAACmL,EAAQlK,GAAT,OAChB,gCACGkK,EAAO,GADV,OACkBA,EAAO,GADzB,OAAUlK,SAKd,cAACwJ,GAAD,kDACA,eAACE,GAAD,WACE,+BAEG,UAAAI,EAAM5L,kBAAN,eAAkBC,MACjB,cAACwL,GAAD,CACEQ,GAAI,eACJ5F,QAAS,kBAAMwF,EAAYD,EAAM5L,WAAWC,KAAM2L,EAAMhM,OAF1D,sBAME,OAEN,+BAEG,UAAAgM,EAAM5L,kBAAN,eAAkBE,OACjB,cAACuL,GAAD,CACEQ,GAAI,eACJ5F,QAAS,kBAAMwF,EAAYD,EAAMhM,KAAMgM,EAAM5L,WAAWE,QAF1D,uBAME,aC1HC,SAASgM,KACtB,IAAQhI,EAAgB6B,qBAAW5C,GAA3Be,YACR,EAA8CN,qBAA9C,mBAAOuI,EAAP,KAAwBC,EAAxB,KACA,EAA0BxI,qBAA1B,mBAAOyI,EAAP,KAAcC,EAAd,KACMC,EAAWvD,mBAqCjB,OAnCAxE,qBAAU,WAER4H,GAAmB,SAACI,GAClB,IAAIC,GAAQ,EASZ,OAPAvI,EAAYxC,SAAQ,SAACqB,GAAS,IAAD,EAC3B,UAAAA,EAAI3C,cAAJ,SAAYsB,SAAQ,SAACkK,GACfA,EAAMhM,OAAS4M,IACjBC,GAAQ,SAIVA,EAEKD,EAGA,UAGV,CAACtI,IAEJM,qBAAU,WACR,GAAI6H,EAAO,CACT,IAAMvM,EAASyM,EAASnD,QAAQsD,YAC5B5M,EAAO6M,WACTN,EAAMO,UAAU9M,MAGnB,CAACoE,EAAamI,IAOf,cAAC1C,GAAD,UACE,qBAAKpG,MAAO,CAAEwG,MAAO,OAAQV,OAAQ,SAArC,SACE,eAACqB,GAAD,CAAYmC,UAAW,SAACC,GAAD,OAAWR,EAASQ,EAAMC,SAAjD,UACE,cAACC,EAAA,EAAD,CAAapD,SAAU,WAAYE,QAAS,MAE5C,cAACmD,EAAA,EAAD,CAAc1D,IAAKgD,EAAnB,SACGrI,EAAYrD,KAAI,SAACkC,GAAS,IAAD,EACxB,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAK3C,cAAZ,aAAO,EAAaS,KAAI,SAAC+K,GACvB,OACE,cAACsB,EAAA,EAAD,CAEEC,UAAWvB,EAAM9L,OAEjBsN,cAAe,CACbC,MAAO,kBAnBDzN,EAmBwBgM,EAAMhM,UAlBtDwM,EAAmBxM,GADrB,IAA0BA,IAqBR0N,YAAa,CAEXC,MACEpB,IAAoBP,EAAMhM,KAAO,UAAY,WAVnD,SAaE,cAAC4N,EAAA,EAAD,UACE,cAAC7B,GAAD,CAAcC,MAAOA,EAAO7I,IAAKA,OAb9B6I,EAAMhM,qB,uDC7CzB6N,I,YAAa,UAAM5P,UAAN,aAEb4N,GAAa3G,YAAO4G,IAAP5G,CAAH,6SAiBV4I,GAAkB5I,YAAO6I,KAAP7I,CAAH,oGAOf8I,GAAwB,WAC5B,OACE,cAAC,GAAD,CAAY3B,GAAI,IAAhB,SACE,cAAC,GAAD,CAASxE,UAAW,QAASC,QAAS,oCAAtC,SACE,cAACgG,GAAD,SAMFG,GAAgB/I,IAAOgJ,OAAV,2SAiBbC,GAA6BjJ,YAAO+I,GAAP/I,CAAH,4CAG1BkJ,GAA2BlJ,YAAOmJ,KAAPnJ,CAAH,oGAOxBoJ,GAAepJ,IAAOK,IAAV,+SAiBZgJ,GAA8B,SAACrI,GACnC,OACE,qCACE,cAACiI,GAAD,CAA4B1H,QAASP,EAAMO,QAA3C,SACE,cAAC,GAAD,CAASoB,UAAW,OAAQC,QAAS,oCAArC,SACE,cAACsG,GAAD,QAGJ,cAACE,GAAD,4CAEIpI,EAAMsI,WAAa,uBAAe,kBAFtC,WASAC,GAAmBvJ,YAAO+I,GAAP/I,CAAH,6CAIhBwJ,GAAiBxJ,YAAOyJ,KAAPzJ,CAAH,oGAOd0J,GAAoB,SAAC1I,GACzB,OACE,cAACuI,GAAD,CAAkBhI,QAASP,EAAMO,QAAjC,SACE,cAAC,GAAD,CAASoB,UAAW,OAAQC,QAAS,mCAArC,SACE,cAAC4G,GAAD,SAMO,SAASG,KACtB,MAA8B7K,qBAA9B,mBAAO8K,EAAP,KAAgBC,EAAhB,KACA,EAAgC/K,qBAAhC,mBAAOgL,EAAP,KAAiBC,EAAjB,KACA,EAAoCjL,oBAAS,GAA7C,mBAAOwK,EAAP,KAAmBU,EAAnB,KACQxK,EAAqByB,qBAAW5C,GAAhCmB,iBACFyK,EAAe/F,mBACfgG,EAAehG,mBACfiG,EAAgBjG,mBA8CtB,SAASkG,IACPJ,GAAeV,GAGjB,SAASe,IAEHC,SAASC,kBACXD,SAASE,iBAGLP,EAAa3F,QAAQmG,kBACvBR,EAAa3F,QAAQmG,oBACZR,EAAa3F,QAAQoG,wBAE9BT,EAAa3F,QAAQoG,0BACZT,EAAa3F,QAAQqG,qBAE9BV,EAAa3F,QAAQqG,sBAK3B,OAlEAjL,qBAAU,WACJkK,GAAWE,IACbF,EAAQgB,KAAKd,GACbA,EAASc,KAAKhB,MAEf,CAACA,EAASE,IAEbpK,qBAAU,WACR,GAAIkK,GAAWE,GAAYtK,EAAkB,CAC3C,IAAMqL,EAAYC,KAAEC,aAAaC,QAAf,UACbrC,IADa,OACGnJ,EAAiBrE,KAAKJ,UADzB,aAEZ4K,UAFY,YAEFnG,EAAiBrE,KAAKH,OAAO,KAF3B,aAGZ2K,UAHY,YAGFnG,EAAiBrE,KAAKH,OAAO,KAH3B,aAIZ2K,UAJY,YAIFnG,EAAiBrE,KAAKH,OAAO,MAGvCiQ,EAAaH,KAAEC,aAAaC,QAAf,UACdrC,IADc,OACEnJ,EAAiBpE,MAAML,UADzB,aAEb4K,UAFa,YAEHnG,EAAiBpE,MAAMJ,OAAO,KAF3B,aAGb2K,UAHa,YAGHnG,EAAiBpE,MAAMJ,OAAO,KAH3B,aAIb2K,UAJa,YAIHnG,EAAiBpE,MAAMJ,OAAO,MAI9CkP,EAAa5F,QAAQ4G,cACrBf,EAAc7F,QAAQ4G,cAGlB5B,GAEFuB,EAAUM,MAAMhB,EAAc7F,SAC9B2G,EAAWE,MAAMjB,EAAa5F,WAG9BuG,EAAUM,MAAMjB,EAAa5F,SAC7B2G,EAAWE,MAAMhB,EAAc7F,UAIjCsF,EAAQ9B,UAAU+C,EAAUjD,gBAE7B,CAACgC,EAASE,EAAUtK,EAAkB8J,IA0BvC,sBACE7E,IAAKwF,EACLxL,MAAO,CAAE2M,QAAS,OAAQnG,MAAO,OAAQV,OAAQ,SAFnD,UAIE,eAACqB,GAAD,CACEnH,MAAO,CAAEwG,MAAO,MAAOV,OAAQ,SAC/BwD,UAAW,SAACC,GAAD,OAAW6B,EAAW7B,EAAMC,SAFzC,UAIE,cAACC,EAAA,EAAD,CAAapD,SAAU,aACvB,cAAC,GAAD,IACA,cAAC,GAAD,CACEwE,WAAYA,EACZ/H,QAAS,kBAAM6I,OAEjB,cAAC,GAAD,CAAmB7I,QAAS,kBAAM8I,OAClC,cAAClC,EAAA,EAAD,CAAc1D,IAAKyF,OAErB,eAACtE,GAAD,CACEnH,MAAO,CAAEwG,MAAO,MAAOV,OAAQ,SAC/BwD,UAAW,SAACC,GAAD,OAAW+B,EAAY/B,EAAMC,SAF1C,UAIE,cAACC,EAAA,EAAD,CAAapD,SAAU,aACvB,cAAC,GAAD,IACA,cAAC,GAAD,CACEwE,WAAYA,EACZ/H,QAAS,kBAAM6I,OAEjB,cAAC,GAAD,CAAmB7I,QAAS,kBAAM8I,OAClC,cAAClC,EAAA,EAAD,CAAc1D,IAAK0F,UC1OZ,SAASkB,GAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAInC,OACE,8BACE,kCACE,uBACEzJ,KAAK,WACLE,QAASsJ,EAAKE,SACdzJ,SATR,WACEwJ,EAAWD,EAAKG,OAUXH,EAAKxQ,UCXC,SAAS4Q,GAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOJ,EAAc,EAAdA,WACxC,OAAOI,EAAM5P,KAAI,SAACuP,GAChB,OAAO,cAACD,GAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKG,OCF3B,IAAMG,GAAoB,gBAEX,SAASC,KACtB,MAA0B/M,mBAAS,IAAnC,mBAAO6M,EAAP,KAAcG,EAAd,KACMC,EAAc7H,mBAgCpB,OA9BAxE,qBAAU,WACR,IAAMsM,EAAcC,KAAKC,MAAMC,aAAaC,QAAQR,KAChDI,GAAaF,EAASE,KACzB,IAEHtM,qBAAU,WACRyM,aAAaE,QAAQT,GAAmBK,KAAKK,UAAUX,MACtD,CAACA,IAwBF,qBAAKlN,MAAO,CAAE2M,QAAS,OAAQmB,eAAgB,UAA/C,SACE,sBAAK9N,MAAO,CAAE2M,QAAS,OAAQoB,cAAe,UAA9C,UACE,cAACd,GAAD,CAAUC,MAAOA,EAAOJ,WAxB9B,SAAoBE,GAClB,IAAMgB,EAAQ,YAAOd,GACfL,EAAOmB,EAASvL,MAAK,SAACoK,GAAD,OAAUA,EAAKG,KAAOA,KACjDH,EAAKE,UAAYF,EAAKE,SACtBM,EAASW,MAqBL,uBAAOhI,IAAKsH,EAAajK,KAAK,SAC9B,wBAAQP,QAnBd,SAAuBmL,GACrB,IAAM5R,EAAOiR,EAAYzH,QAAQ3J,MACpB,KAATG,IACJgR,GAAS,SAACa,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAElB,GAAImB,KAAKC,MAAO/R,KAAMA,EAAM0Q,UAAU,QAEhEO,EAAYzH,QAAQ3J,MAAQ,OAaxB,sBACA,wBAAQ4G,QAXd,WACE,IAAMkL,EAAWd,EAAMtK,QAAO,SAACiK,GAAD,OAAWA,EAAKE,YAC9CM,EAASW,IASL,6BACA,gCAAMd,EAAMtK,QAAO,SAACiK,GAAD,OAAWA,EAAKE,YAAUzO,OAA7C,sB,aCrCF+P,GAAY9M,IAAOK,IAAV,+FAGOP,GAoBPiN,OAjBf,WACE,OACE,cAACD,GAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAW9F,KACjC,cAAC,IAAD,CAAO6F,KAAK,aAAaC,UAAW9F,KACpC,cAAC,IAAD,CAAO6F,KAAK,YAAYC,UAAWrB,KACnC,cAAC,IAAD,CAAOoB,KAAK,eAAeC,UAAWvD,eCnBlDwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/C,SAASgD,eAAe,W","file":"static/js/main.c306cddb.chunk.js","sourcesContent":["// ścieżka to pliku data.csv\r\nconst PUBLIC_DATA_CSV_PATH = `${process.env.PUBLIC_URL}/data/data.csv`;\r\n\r\nconst Headers = {\r\n  MenuItemName: \"Menu Item Name\",\r\n  SubMenuItemName: \"Submenu Item Name\",\r\n  PhotoName: \"Photo Name\",\r\n  PhotoFileName: \"Photo File Name\",\r\n  TopLeftLat: \"TopLeft Lat\",\r\n  TopLeftLng: \"TopLeft Lng\",\r\n  TopRightLat: \"TopRight Lat\",\r\n  TopRightLng: \"TopRight Lng\",\r\n  BottomRightLat: \"BottomRight Lat\",\r\n  BottomRightLng: \"BottomRight Lng\",\r\n  BottomLeftLat: \"BottomLeft Lat\",\r\n  BottomLeftLng: \"BottomLeft Lng\",\r\n  LeftPairPhotoName: \"Left Stereopair Photo Name\",\r\n  RightPairPhotoName: \"Right Stereopair Photo Name\",\r\n};\r\n\r\n// załaduj data.csv z pliku zwracając text\r\nexport const loadCSVFile = async () => {\r\n  const response = await fetch(PUBLIC_DATA_CSV_PATH);\r\n  const reader = response.body.getReader();\r\n  const decoder = new TextDecoder(\"utf-8\");\r\n  const result = await reader.read();\r\n\r\n  return decoder.decode(result.value);\r\n};\r\n\r\n// utwórz obiekt zdjęcia\r\nconst createPhotoObj = (row) => {\r\n  return {\r\n    name: row[Headers.PhotoName],\r\n    fileName: row[Headers.PhotoFileName],\r\n    bounds: [\r\n      [\r\n        parseFloat(row[Headers.TopLeftLat]),\r\n        parseFloat(row[Headers.TopLeftLng]),\r\n      ],\r\n      [\r\n        parseFloat(row[Headers.TopRightLat]),\r\n        parseFloat(row[Headers.TopRightLng]),\r\n      ],\r\n      [\r\n        parseFloat(row[Headers.BottomRightLat]),\r\n        parseFloat(row[Headers.BottomRightLng]),\r\n      ],\r\n      [\r\n        parseFloat(row[Headers.BottomLeftLat]),\r\n        parseFloat(row[Headers.BottomLeftLng]),\r\n      ],\r\n    ],\r\n    stereoPair: {\r\n      left: row[Headers.LeftPairPhotoName] || null,\r\n      right: row[Headers.RightPairPhotoName] || null,\r\n    },\r\n  };\r\n};\r\n\r\n// utwórz object submenu ze zdjęciem\r\nconst createSetItemObj = (row) => {\r\n  return {\r\n    name: row[Headers.SubMenuItemName],\r\n    photos: [createPhotoObj(row)],\r\n  };\r\n};\r\n\r\nconst processTextToRows = (str) => {\r\n  const END_OF_LINE = \"\\n\";\r\n  const DELIMITER = \",\";\r\n  // pobierz rząd nagłówków\r\n  const headers = str\r\n    .slice(0, str.indexOf(END_OF_LINE))\r\n    .split(DELIMITER)\r\n    .map((header) => header.trim());\r\n  // podziel tabelę na rzędy\r\n  const rows = str.slice(str.indexOf(END_OF_LINE) + 1).split(END_OF_LINE);\r\n\r\n  return rows.map((row) => {\r\n    // podziel komórki w rzędzie\r\n    const values = row.split(DELIMITER).map((val) => val.trim()); // trim - pozbądź się białych znaków na początku i końcu wartości w kolumnie\r\n    const eachObject = headers.reduce((obj, header, i) => {\r\n      // dla rzędów zamień kolumny z wartościami na parę { 'nazwa kolumny': 'wartość kolumny' }\r\n      obj[header] = values[i];\r\n      return obj;\r\n    }, {});\r\n    return eachObject;\r\n  });\r\n};\r\n\r\n// wyrażenie regularne sprawdzające czy liczba jest zmiennoprzecinkowa\r\nconst isFloatRegex = /^[+-]?\\d+(\\.\\d+)?$/;\r\n\r\nconst validateRows = (rows) => {\r\n  const errors = [];\r\n\r\n  // sprawdź czy plik .csv posiada wszystkie wymagane kolumny (Headers)\r\n  const missingColumns = [];\r\n  const keys = Object.keys(rows[0]);\r\n  Object.values(Headers).forEach((header) => {\r\n    if (!keys.includes(header)) {\r\n      missingColumns.push(header);\r\n    }\r\n  });\r\n  if (missingColumns.length) {\r\n    errors.push({\r\n      index: 0,\r\n      message: `brak następujących kolumn: \"${missingColumns.join('\", \"')}\"`,\r\n    });\r\n  }\r\n\r\n  // dla każdego rzędu sprawdź czy wymagane pola nie są puste lub w niepoprawnym formacie\r\n  rows.forEach((row, i) => {\r\n    const index = i + 2; // indeks rzędu w data.csv (row[0] to index 1, + header 'odcięty' wcześniej)\r\n    if (!row[Headers.MenuItemName]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.MenuItemName}]: pole nie może być puste.`,\r\n      });\r\n    }\r\n    if (!row[Headers.SubMenuItemName]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.SubMenuItemName}]: pole nie może być puste.`,\r\n      });\r\n    }\r\n    if (!row[Headers.PhotoName]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.PhotoName}]: pole nie może być puste.`,\r\n      });\r\n    }\r\n    if (!row[Headers.PhotoFileName]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.PhotoFileName}]: pole nie może być puste.`,\r\n      });\r\n    }\r\n    if (!row[Headers.TopLeftLat]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopLeftLat}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.TopLeftLat])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopLeftLat}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.TopLeftLng]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopLeftLng}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.TopLeftLng])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopLeftLng}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.TopRightLat]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopRightLat}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.TopRightLat])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopRightLat}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.TopRightLng]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopRightLng}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.TopRightLng])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.TopRightLng}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.BottomRightLat]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomRightLat}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.BottomRightLat])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomRightLat}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.BottomRightLng]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomRightLng}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.BottomRightLng])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomRightLng}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.BottomLeftLat]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomLeftLat}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.BottomLeftLat])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomLeftLat}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n\r\n    if (!row[Headers.BottomLeftLng]) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomLeftLng}]: pole nie może być puste.`,\r\n      });\r\n    } else if (!isFloatRegex.test(row[Headers.BottomLeftLng])) {\r\n      errors.push({\r\n        index,\r\n        message: `[${Headers.BottomLeftLng}]: pole musi być liczbą zmiennoprzecinkową np. '51.00'`,\r\n      });\r\n    }\r\n  });\r\n\r\n  // zwróc listę błędów\r\n  return errors;\r\n};\r\n\r\nexport const processCSV = (str) => {\r\n  const rows = processTextToRows(str);\r\n\r\n  // walidacja danych\r\n  const errors = validateRows(rows);\r\n\r\n  // jeśli znaleziono błędy zwróć je i zakończ funkcję\r\n  if (errors.length) {\r\n    return { data: null, errors };\r\n  }\r\n\r\n  const menuItems = new Map();\r\n  // dla każdego rzędu w csv dodaj zdjęcie do menuItems\r\n  rows.forEach((row) => {\r\n    const menuItemName = row[Headers.MenuItemName];\r\n    const subMenuItemName = row[Headers.SubMenuItemName];\r\n\r\n    if (menuItems.has(menuItemName)) {\r\n      // jeśli w menuItems już jest obiekt z kluczem menuItemName (np. 'Wrocław')\r\n      const menuItem = menuItems.get(menuItemName);\r\n\r\n      if (menuItem.sets.has(subMenuItemName)) {\r\n        // jeśli w sets jest już item z kluczem subMenuItemName (np. 'Zestaw 1')\r\n        const subMenuItem = menuItem.sets.get(subMenuItemName);\r\n\r\n        // utwórz obiekt zdjęcia\r\n        const photoObj = createPhotoObj(row);\r\n        // dodaj obiekt zdjęcia do zestawu\r\n        subMenuItem.photos.push(photoObj);\r\n      } else {\r\n        // jeśli w sets nie ma jeszcze itemu z kluczem subMenuItemName (np. 'Zestaw 1')\r\n        // to utwórz obiekt submenu z dodanym pierwszym zdjęciem\r\n        const subMenuItemObj = createSetItemObj(row);\r\n\r\n        // dodaj obiekt submenu do menuItems\r\n        menuItem.sets.set(subMenuItemName, subMenuItemObj);\r\n      }\r\n    } else {\r\n      // jeśli w menuItems nie ma jeszcze obiektu z menuItemName (np. 'Wrocław')\r\n      // to utwórz pusty obiekt menuItem\r\n      const menuItemObj = {\r\n        name: menuItemName,\r\n        sets: new Map(),\r\n      };\r\n      // utwórz obiekt submenu z dodanym pierwszym zdjęciem\r\n      const subMenuItemObj = createSetItemObj(row);\r\n      // dodaj obiekt submenu do zestawów w obiekcie menuItem\r\n      menuItemObj.sets.set(subMenuItemName, subMenuItemObj);\r\n      // dodaj obiekt menuItem do menuItems\r\n      menuItems.set(menuItemName, menuItemObj);\r\n    }\r\n  });\r\n\r\n  // zamień struktury danych Map() na Array() wszędzie tam gdzie była wykorzystywana\r\n  const data = Array.from(menuItems.values()).map((menuItem) => ({\r\n    ...menuItem,\r\n    sets: Array.from(menuItem.sets.values()),\r\n  }));\r\n\r\n  // zwróc przetworzony csv do struktury danych aplikacji\r\n  return { data, errors };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { loadCSVFile, processCSV } from \"./dataLoader\";\r\n\r\nexport const AppContext = React.createContext(\"AppContext\");\r\n\r\nconst ErrorMessage = ({ errors }) => {\r\n  return (\r\n    <div style={{ padding: '24px '}}>\r\n      <h4>{'Wystąpiły błędy podczas wczytywania pliku data.csv:'}</h4>\r\n      <h5>{'(Wiersz: [Nazwa kolumny]: Powód)'}</h5>\r\n      {errors.map(error => {\r\n        return <div>{error.index}: {error.message}</div>\r\n      })}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [sidebarData, setSidebarData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errors, setErrors] = useState([]);\r\n  const [checkedSets, setCheckedSets] = useState([]);\r\n  const [openedSidebarElements, setOpenedSidebarElements] = useState([]);\r\n  const [chosenStereopair, setChosenStereopair] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const csv = await loadCSVFile();\r\n      const { data, errors } = processCSV(csv);\r\n\r\n      setErrors(errors);\r\n      setSidebarData(data);\r\n      setIsLoading(false);\r\n    }\r\n\r\n    setIsLoading(true);\r\n    fetchData()\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return 'Loading data...';\r\n  }\r\n\r\n  if (errors.length) {\r\n    return <ErrorMessage errors={errors} />;\r\n  }\r\n\r\n  const value = {\r\n    sidebarData: sidebarData,\r\n    checkedSets: checkedSets,\r\n    setCheckedSets: setCheckedSets,\r\n    openedSidebarElements: openedSidebarElements,\r\n    setOpenedSidebarElements: setOpenedSidebarElements,\r\n    chosenStereopair: chosenStereopair,\r\n    setChosenStereopair: setChosenStereopair,\r\n  };\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n","export const colors = {\r\n  gray700: \"#0c0f13\",\r\n  gray500: \"#707A85\",\r\n  gray300: \"#b4bac0\",\r\n  gray100: \"#D6DAE1\",\r\n  accentColor: \"#3388ff\",\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../../consts/colors\";\r\nimport { RiArrowDownSFill, RiArrowUpSFill } from \"react-icons/ri\";\r\nimport { AppContext } from \"../../context/appContext\";\r\n\r\nconst RiArrowDownSFillIcon = styled(RiArrowDownSFill)`\r\n  color: ${colors.gray500};\r\n  height: 20px;\r\n  width: 20px;\r\n`;\r\n\r\nconst RiArrowUpSFillIcon = styled(RiArrowUpSFill)`\r\n  color: ${colors.gray700};\r\n  height: 20px;\r\n  width: 20px;\r\n`;\r\n\r\nconst CityName = styled.div`\r\n  padding: 0px 25px 10px 35px;\r\n  width: 250px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n\r\n  @media (max-width: 410px) {\r\n    font-size: 14px;\r\n    padding-right: 10px;\r\n  }\r\n`;\r\n\r\nconst CitySet = styled.div`\r\n  padding: 0px 14px;\r\n  margin: 0px 5px 10px 5px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  text-transform: none;\r\n  border-left: solid 3px ${colors.gray300};\r\n\r\n  @media (max-width: 410px) {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst CitySetTitle = styled.div`\r\n  padding-bottom: 12px;\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.6s ease;\r\n\r\n  &:hover {\r\n    color: ${colors.gray300};\r\n  }\r\n`;\r\n\r\nconst ArrowContainer = styled.div`\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst ArrowIcon = ({ open }) => {\r\n  return open ? <RiArrowUpSFillIcon /> : <RiArrowDownSFillIcon />;\r\n};\r\n\r\nconst ChecboxContainer = styled.input`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst CounterContainer = styled.div`\r\n  margin-left: 10px;\r\n  margin-top: 3px;\r\n  min-height: 15px;\r\n  min-width: 15px;\r\n  max-height: 15px;\r\n  max-width: 15px;\r\n  border-radius: 50%;\r\n  background: ${colors.accentColor};\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n`;\r\n\r\nexport default function MenuItem(props) {\r\n  const {\r\n    checkedSets,\r\n    setCheckedSets,\r\n    openedSidebarElements,\r\n    setOpenedSidebarElements,\r\n  } = useContext(AppContext);\r\n\r\n  const open = openedSidebarElements.find((item) => item === props.name);\r\n\r\n  //  funkcja, która na kliknięcie otwórzy zamknięty element, bądź zamknie już otwarty\r\n  function handleClick(cityName) {\r\n    setOpenedSidebarElements((prevOpened) => {\r\n      if (prevOpened.find((item) => item === cityName)) {\r\n        // jeśli MenuItem było open to usuń z setOpenedElements\r\n        return prevOpened.filter((item) => item !== cityName);\r\n      } else {\r\n        // jeśli MenuItem nie było open to dodaj do setOpenedElements\r\n        return [...prevOpened, cityName];\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleCheckboxClick(cityName, setObj) {\r\n    setCheckedSets((prevCheckedSets) => {\r\n      // funkcja zwracająca elementy, które są aktualnie zaznaczone\r\n      if (\r\n        prevCheckedSets.find(\r\n          (item) => item.cityName === cityName && item.name === setObj.name\r\n        )\r\n      ) {\r\n        // jeśli kliknięty element został już wcześniej zaznaczony to go usuń...\r\n        return prevCheckedSets.filter(\r\n          (item) => !(item.cityName === cityName && item.name === setObj.name)\r\n        );\r\n      } else {\r\n        //... a jeśli nie był wcześniej zaznaczony to go dodaj\r\n        return [...prevCheckedSets, { ...setObj, cityName }];\r\n      }\r\n    });\r\n  }\r\n\r\n  const checkedSetsCount = checkedSets.filter(\r\n    (set) => set.cityName === props.name\r\n  ).length;\r\n\r\n  return (\r\n    <CityName>\r\n      <ListItem onClick={() => handleClick(props.name)}>\r\n        {props.name}\r\n        {!!checkedSetsCount && (\r\n          <CounterContainer>{checkedSetsCount}</CounterContainer>\r\n        )}\r\n        <ArrowContainer>\r\n          {!!props.sets.length && <ArrowIcon open={open} />}\r\n        </ArrowContainer>\r\n      </ListItem>\r\n      {open && (\r\n        <CitySet>\r\n          <CitySetTitle>Numer szeregu (nr zdjęć):</CitySetTitle>\r\n          {/* alfabetyczne sortowanie szeregów (setów) */}\r\n          {props.sets\r\n            .sort((a, b) => a.name.localeCompare(b.name))\r\n            .map((item) => (\r\n              <ListItem\r\n                key={item.name}\r\n                onClick={() => handleCheckboxClick(props.name, item)}\r\n              >\r\n                <ChecboxContainer\r\n                  type=\"checkbox\"\r\n                  onChange={() => {}}\r\n                  checked={\r\n                    !!checkedSets.find(\r\n                      (set) =>\r\n                        set.cityName === props.name && set.name === item.name\r\n                    )\r\n                  }\r\n                ></ChecboxContainer>\r\n                {item.name}\r\n              </ListItem>\r\n            ))}\r\n        </CitySet>\r\n      )}\r\n    </CityName>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Tooltip = (props) => {\r\n  let timeout;\r\n  const [active, setActive] = useState(false);\r\n\r\n  const showTip = () => {\r\n    // Ustaw active na true z opóźnieniem\r\n    timeout = setTimeout(() => {\r\n      setActive(true);\r\n    }, props.delay || 400);\r\n  };\r\n\r\n  const hideTip = () => {\r\n    // Przerwij ustawianie active na true jeśli kursor opuści element zanim pojawi się tooltip\r\n    clearInterval(timeout);\r\n    // Ustaw active na false\r\n    setActive(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Tooltip-Wrapper\"\r\n      // Kiedy pokazać tooltip\r\n      onMouseEnter={showTip}\r\n      // Kiedy schować tooltip\r\n      onMouseLeave={hideTip}\r\n    >\r\n      {/* Wyświetl opakowane komponenty */}\r\n      {props.children}\r\n      {active && (\r\n        <div className={`Tooltip-Tip ${props.direction || \"top\"}`}>\r\n          {/* Tooltip tekst */}\r\n          {props.content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;","import React, { useState, useRef, useContext } from \"react\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../../consts/colors\";\r\nimport { AppContext } from \"../../context/appContext\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst SidebarContainer = styled.div`\r\n  background: rgba(249, 250, 252, 0.94);\r\n  color: #0c0f12;\r\n  font-family: \"Roboto\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  width: fit-content;\r\n`;\r\n\r\nconst SidebarTop = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: solid 2px ${colors.gray100};\r\n`;\r\n\r\nconst IoIosArrowBackButton = styled(IoIosArrowBack)`\r\n  color: ${colors.gray500};\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 15px 5px 15px 15px;\r\n  cursor: pointer;\r\n  transition: all 0.4s ease;\r\n\r\n  &:hover {\r\n    color: ${colors.gray300};\r\n  }\r\n`;\r\n\r\nconst SidebarMiddle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  background: ${colors.gray100};\r\n  display: flex;\r\n  width: 300px;\r\n  height: 28px;\r\n  margin: 20px 20px 10px 30px;\r\n  border-radius: 20px;\r\n\r\n  @media (max-width: 410px) {\r\n    width: 235px;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  background: none;\r\n  color: ${colors.gray500};\r\n  font-family: \"Roboto\", sans-serif;\r\n  height: 20px;\r\n  width: 100%;\r\n  padding: 4px 14px;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst IconSearchContainer = styled.div`\r\n  color: ${colors.gray700};\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0px 10px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.6s ease;\r\n\r\n  &:hover {\r\n    background: ${colors.gray300};\r\n    border-radius: 20px;\r\n  }\r\n`;\r\n\r\nconst BiSearchButton = styled(BiSearch)`\r\n  color: ${colors.gray500};\r\n  height: 20px;\r\n  width: 20px;\r\n`;\r\n\r\nconst FiMenuButton = styled(FiMenu)`\r\n  color: ${colors.gray500};\r\n  background: rgba(249, 250, 252, 0.94);\r\n  height: 30px;\r\n  width: 30px;\r\n  padding: 20px;\r\n  border-radius: 0px 0px 25px 0px;\r\n  cursor: pointer;\r\n  transition: all 0.4s ease;\r\n\r\n  &:hover {\r\n    color: ${colors.gray300};\r\n  }\r\n`;\r\n\r\nconst SidebarListTitle = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  padding: 10px 0px 20px 35px;\r\n  color: ${colors.gray500};\r\n`;\r\n\r\nconst SidebarMainTitle = styled.div`\r\n  font-weight: 500;\r\n  font-size: 22px;\r\n  text-transform: uppercase;\r\n  padding: 20px 20px 15px 0px;\r\n  color: ${colors.gray500};\r\n\r\n  @media (max-width: 410px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst SidebarContentList = styled.div`\r\n  padding: 0px 0px;\r\n`;\r\n\r\nexport default function Sidebar() {\r\n  const { sidebarData } = useContext(AppContext);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const searchRef = useRef(search);\r\n  // pofiltrowane dane z sidebaru na podstawie wpisywanej w wyszukiwarkę frazy (wielkość znaków nie ma znaczenia)\r\n  const filteredSidebarData = sidebarData\r\n    .sort((a, b) => a.name.localeCompare(b.name))\r\n    .filter((item) =>\r\n      item.name.toLocaleUpperCase().includes(search.toLocaleUpperCase())\r\n    );\r\n\r\n  // funkcja zczytująca wpisywane w wyszukiwarkę frazy (dzięki funkcji referencji)\r\n  function handleSearch() {\r\n    const value = searchRef.current.value;\r\n    setSearch(value);\r\n  }\r\n\r\n  // funkcja ustawiająca stan sidebaru (czy otwarty czy zamknięty)\r\n  function closeSidebar() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  // jeśli stan sidebaru jest określony jako nie otwarty to\r\n  // zastąp pasek nawigacji ikoną \"burger menu\", którego kliknięcie przywraca nawigację\r\n  if (!isOpen) {\r\n    return (\r\n      <Tooltip direction={\"right\"} content={\"Rozwiń panel boczny\"}>\r\n        <FiMenuButton onClick={() => setIsOpen(true)} />\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", overflowY: \"scroll\" }}>\r\n      <SidebarContainer>\r\n        <SidebarTop>\r\n          <Tooltip direction={\"right\"} content={\"Zwiń panel boczny\"}>\r\n            <IoIosArrowBackButton onClick={closeSidebar} />\r\n          </Tooltip>\r\n          <SidebarMainTitle>Serwis stereoskopowy</SidebarMainTitle>\r\n        </SidebarTop>\r\n        <SidebarMiddle>\r\n          <SearchContainer>\r\n            <SearchInput\r\n              ref={searchRef}\r\n              name=\"search\"\r\n              placeholder=\"Szukaj poligonu lub szeregu\"\r\n              autoComplete=\"off\"\r\n              onKeyUp={handleSearch}\r\n            />\r\n            <IconSearchContainer type=\"submit\" onClick={handleSearch}>\r\n              <BiSearchButton />\r\n            </IconSearchContainer>\r\n          </SearchContainer>\r\n          <SidebarListTitle>Poligony fotointerpretacyjne:</SidebarListTitle>\r\n        </SidebarMiddle>\r\n        <SidebarContentList>\r\n          {filteredSidebarData.map((item) => (\r\n            <MenuItem key={item.name} name={item.name} sets={item.sets} />\r\n          ))}\r\n        </SidebarContentList>\r\n      </SidebarContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <div style={{ position: \"relative \" }}>\r\n      <div style={{ position: \"absolute\", top: 0, left: 0, zIndex: 2000 }}>\r\n        <Sidebar />\r\n      </div>\r\n      <div style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\" }}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TileLayer } from \"react-leaflet\";\r\n\r\nexport function OpenStreetMap() {\r\n  return (\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n  );\r\n}\r\n","import { LatLngBounds, LatLng } from \"leaflet\";\r\nimport React from \"react\";\r\nimport { MapContainer, ScaleControl } from \"react-leaflet\";\r\nimport styled from \"styled-components\";\r\nimport { OpenStreetMap } from \"./layers\";\r\n\r\nconst defaultCenter = [51.1078, 17.0385]; // Wrocław\r\n\r\nconst MapContainerStyled = styled(MapContainer)`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst maxBounds = new LatLngBounds(new LatLng(90, -180), new LatLng(-90, 180));\r\n\r\nexport default function LeafletMap({ children, ...props }) {\r\n  return (\r\n    <MapContainerStyled\r\n      center={defaultCenter}\r\n      zoom={12}\r\n      zoomSnap={0.25}\r\n      minZoom={2}\r\n      maxBounds={maxBounds}\r\n      maxBoundsViscosity={1}\r\n      zoomControl={false}\r\n      {...props}\r\n    >\r\n      <OpenStreetMap />\r\n      <ScaleControl position={\"bottomright\"} />\r\n      {children}\r\n    </MapContainerStyled>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { colors } from \"../../consts/colors\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../../context/appContext\";\r\n\r\nconst PopupInfoContainer = styled.div`\r\n  min-width: 180px;\r\n`;\r\n\r\nconst PhotoTitle = styled.h3`\r\n  margin-top: 20px;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst PhotoSetInfo = styled.div`\r\n  border-bottom: solid 1px ${colors.gray100};\r\n  padding-bottom: 7px;\r\n  color: ${colors.gray700};\r\n`;\r\n\r\nconst Subheading = styled.h4`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst LinkButton = styled(Link)`\r\n  background: ${colors.gray100};\r\n  text-decoration: none;\r\n  color: ${colors.gray700};\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  border: 0;\r\n  transition: all 0.5s;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  text-align: center;\r\n  display: block;\r\n  min-width: 100px;\r\n\r\n  &::after {\r\n    content: \"\\\\279C\";\r\n    font-family: \"Font Awesome 5 Pro\";\r\n    font-weight: 100;\r\n    position: absolute;\r\n    left: 76%;\r\n    top: 54%;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  &:focus,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n    color: ${colors.gray700};\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    background: ${colors.accentColor};\r\n    transition: all 0.5s;\r\n    box-shadow: 0px 3px 5px #d6e7ff;\r\n    color: #ffffff;\r\n    padding-left: 5px;\r\n    padding-right: 15px;\r\n\r\n    &::after {\r\n      opacity: 1;\r\n      transition: all 0.5s;\r\n      color: #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PopupContent({ photo, set }) {\r\n  const { setChosenStereopair } = useContext(AppContext);\r\n  const handleClick = (leftPhotoName, rightPhotoName) => {\r\n    const left = set.photos.find((item) => item.name === leftPhotoName);\r\n    const right = set.photos.find((item) => item.name === rightPhotoName);\r\n    setChosenStereopair({\r\n      left,\r\n      right,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupInfoContainer>\r\n      <PhotoTitle>{photo.name}</PhotoTitle>\r\n      <PhotoSetInfo>\r\n        Poligon: {set.cityName} <br /> Zestaw: {set.name}\r\n        <Subheading>Współrzędne rogów:</Subheading>\r\n        {photo.bounds.map((number, index) => (\r\n          <div key={index}>\r\n            {number[0]} N, {number[1]} E\r\n          </div>\r\n        ))}\r\n      </PhotoSetInfo>\r\n      <Subheading>Zobacz stereoparę ze zdjeciem:</Subheading>\r\n      <ButtonsContainer>\r\n        <div>\r\n          {/* Jeśli zdjęcie ma lewą stereoparę wyświetl link do widoku stereopary, w innym wypadku nie wyświetlaj buttona*/}\r\n          {photo.stereoPair?.left ? (\r\n            <LinkButton\r\n              to={\"/stereo-view\"}\r\n              onClick={() => handleClick(photo.stereoPair.left, photo.name)}\r\n            >\r\n              Po lewej\r\n            </LinkButton>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          {/* Jeśli zdjęcie ma prawą stereoparę wyświetl link do widoku stereopary, w innym wypadku nie wyświetlaj buttona*/}\r\n          {photo.stereoPair?.right ? (\r\n            <LinkButton\r\n              to={\"/stereo-view\"}\r\n              onClick={() => handleClick(photo.name, photo.stereoPair.right)}\r\n            >\r\n              Po prawej\r\n            </LinkButton>\r\n          ) : null}\r\n        </div>\r\n      </ButtonsContainer>\r\n    </PopupInfoContainer>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { ZoomControl, Polygon, Popup, FeatureGroup } from \"react-leaflet\";\r\nimport { AppContext } from \"../../context/appContext\";\r\nimport Layout from \"../Layout\";\r\nimport LeafletMap from \"../LeafletMap\";\r\nimport PopupContent from \"./PopupContent\";\r\n\r\nexport default function Main() {\r\n  const { checkedSets } = useContext(AppContext);\r\n  const [selectedPolygon, setSelectedPolygon] = useState();\r\n  const [myMap, setMyMap] = useState();\r\n  const groupRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // jeśli w checkedSets nie ma zdjęcia z selectedPolygon ustaw selectedPolygon na null\r\n    setSelectedPolygon((prevSelectedPolygon) => {\r\n      let found = false;\r\n      // sprawdź czy w checkedSets jest selectedPolygon\r\n      checkedSets.forEach((set) => {\r\n        set.photos?.forEach((photo) => {\r\n          if (photo.name === prevSelectedPolygon) {\r\n            found = true;\r\n          }\r\n        });\r\n      });\r\n      if (found) {\r\n        // znaleziono, więc selectedPolygon pozostaje niezmieniony (zostaje zaznaczony na czerwono)\r\n        return prevSelectedPolygon;\r\n      } else {\r\n        // nie znaleziono, więc selectedPolygon ustaw na null (odznaczanie zdjęcia)\r\n        return null;\r\n      }\r\n    });\r\n  }, [checkedSets]);\r\n\r\n  useEffect(() => {\r\n    if (myMap) {\r\n      const bounds = groupRef.current.getBounds();\r\n      if (bounds.isValid()) {\r\n        myMap.fitBounds(bounds);\r\n      }\r\n    }\r\n  }, [checkedSets, myMap]);\r\n\r\n  function handlePhotoClick(name) {\r\n    setSelectedPolygon(name);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n        <LeafletMap whenReady={(event) => setMyMap(event.target)}>\r\n          <ZoomControl position={\"topright\"} zIndex={-1000} />\r\n          {/* pokaż poligony tylko zaznaczonych setów (checkedSets) */}\r\n          <FeatureGroup ref={groupRef}>\r\n            {checkedSets.map((set) => {\r\n              return set?.photos?.map((photo) => {\r\n                return (\r\n                  <Polygon\r\n                    key={photo.name}\r\n                    positions={photo.bounds}\r\n                    // zapamiętaj nazwę klikniętego poligonu jako selected (setSelectedPolygon)\r\n                    eventHandlers={{\r\n                      click: () => handlePhotoClick(photo.name),\r\n                    }}\r\n                    pathOptions={{\r\n                      // jeśli poligon jest zaznaczony to nadaj mu kolor czerwony, a w innym wypadku niebieski\r\n                      color:\r\n                        selectedPolygon === photo.name ? \"#ED254E\" : \"#3388ff\",\r\n                    }}\r\n                  >\r\n                    <Popup>\r\n                      <PopupContent photo={photo} set={set} />\r\n                    </Popup>\r\n                  </Polygon>\r\n                );\r\n              });\r\n            })}\r\n          </FeatureGroup>\r\n        </LeafletMap>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { ZoomControl, FeatureGroup } from \"react-leaflet\";\r\nimport LeafletMap from \"../LeafletMap\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { HiOutlineSwitchHorizontal } from \"react-icons/hi\";\r\nimport { BiFullscreen } from \"react-icons/bi\";\r\nimport \"leaflet.sync\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport L, { LatLng } from \"leaflet\";\r\nimport \"leaflet-imageoverlay-rotated\";\r\nimport { AppContext } from \"../../context/appContext\";\r\nimport Tooltip from \"../../components/Tooltip\";\r\n\r\nconst PUBLIC_IMAGES = `${process.env.PUBLIC_URL}/images/`;\r\n\r\nconst LinkButton = styled(Link)`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: 2px solid rgba(0, 0, 0, 0.25);\r\n  z-index: 1000;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background-color: #f4f4f4;\r\n  }\r\n`;\r\n\r\nconst ArrowBackButton = styled(MdArrowBack)`\r\n  color: black;\r\n  height: 18px;\r\n  width: 18px;\r\n  margin-top: 6px;\r\n`;\r\n\r\nconst BackToMainPageControl = () => {\r\n  return (\r\n    <LinkButton to={\"/\"}>\r\n      <Tooltip direction={'right'} content={\"Cofnij do widoku głównego\"}>\r\n        <ArrowBackButton />\r\n      </Tooltip>\r\n    </LinkButton>\r\n  );\r\n};\r\n\r\nconst ControlButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 10px;\r\n  width: 34px;\r\n  height: 34px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  border: 2px solid rgba(0, 0, 0, 0.25);\r\n  z-index: 1000;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background-color: #f4f4f4;\r\n  }\r\n`;\r\n\r\nconst SwitchStereoViewTypeButton = styled(ControlButton)`\r\n  top: 90px;\r\n`;\r\nconst SwitchStereoViewTypeIcon = styled(HiOutlineSwitchHorizontal)`\r\n  color: black;\r\n  height: 18px;\r\n  width: 18px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ViewTypeInfo = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  padding: 4px 8px;\r\n  z-index: 800;\r\n  font-size: 13px;\r\n  text-align: center;\r\n\r\n  @media (max-width: 780px) {\r\n    font-size: 10px;\r\n    left: 10px;\r\n    bottom: 21px;\r\n  }\r\n`;\r\n\r\nconst SwitchStereoViewTypeControl = (props) => {\r\n  return (\r\n    <>\r\n      <SwitchStereoViewTypeButton onClick={props.onClick}>\r\n        <Tooltip direction={'left'} content={\"Zmień tryb wyświetlania\"}>\r\n          <SwitchStereoViewTypeIcon />\r\n        </Tooltip>\r\n      </SwitchStereoViewTypeButton>\r\n      <ViewTypeInfo>\r\n        {`Tryb wyświetlania: ${\r\n          props.isReversed ? \"krzyżogląd\" : \"prostogląd\"\r\n        }.`}\r\n      </ViewTypeInfo>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FullscreenButton = styled(ControlButton)`\r\n  top: 140px;\r\n`;\r\n\r\nconst FullscreenIcon = styled(BiFullscreen)`\r\n  color: black;\r\n  height: 18px;\r\n  width: 18px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst FullScreenControl = (props) => {\r\n  return (\r\n    <FullscreenButton onClick={props.onClick}>\r\n      <Tooltip direction={'left'} content={\"Pokaż w pełnym ekranie\"}>\r\n        <FullscreenIcon />\r\n      </Tooltip>\r\n    </FullscreenButton>\r\n  );\r\n};\r\n\r\nexport default function StereoView() {\r\n  const [leftMap, setLeftMap] = useState();\r\n  const [rightMap, setRightMap] = useState();\r\n  const [isReversed, setIsReversed] = useState(false);\r\n  const { chosenStereopair } = useContext(AppContext);\r\n  const containerRef = useRef();\r\n  const leftImageRef = useRef();\r\n  const rightImageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (leftMap && rightMap) {\r\n      leftMap.sync(rightMap);\r\n      rightMap.sync(leftMap);\r\n    }\r\n  }, [leftMap, rightMap]);\r\n\r\n  useEffect(() => {\r\n    if (leftMap && rightMap && chosenStereopair) {\r\n      const leftImage = L.imageOverlay.rotated(\r\n        `${PUBLIC_IMAGES}${chosenStereopair.left.fileName}`,\r\n        new LatLng(...chosenStereopair.left.bounds[0]),\r\n        new LatLng(...chosenStereopair.left.bounds[1]),\r\n        new LatLng(...chosenStereopair.left.bounds[3])\r\n      );\r\n\r\n      const rightImage = L.imageOverlay.rotated(\r\n        `${PUBLIC_IMAGES}${chosenStereopair.right.fileName}`,\r\n        new LatLng(...chosenStereopair.right.bounds[0]),\r\n        new LatLng(...chosenStereopair.right.bounds[1]),\r\n        new LatLng(...chosenStereopair.right.bounds[3])\r\n      );\r\n\r\n      // Usuń zdjęcia z mapy\r\n      leftImageRef.current.clearLayers();\r\n      rightImageRef.current.clearLayers();\r\n\r\n      // Dodaj zdjęcia do mapy\r\n      if (isReversed) {\r\n        // patrzenie krzyżowe\r\n        leftImage.addTo(rightImageRef.current);\r\n        rightImage.addTo(leftImageRef.current);\r\n      } else {\r\n        // patrzenie normalne\r\n        leftImage.addTo(leftImageRef.current);\r\n        rightImage.addTo(rightImageRef.current);\r\n      }\r\n\r\n      // Wycentruj widok lewej mapy do bounds lewego zdjęcia. Dzięki synchronizowaniu mapek wystarczy centrowanie jednego widoku.\r\n      leftMap.fitBounds(leftImage.getBounds());\r\n    }\r\n  }, [leftMap, rightMap, chosenStereopair, isReversed]);\r\n\r\n  // Funkcja zmieniająca tryb wyświetlania map (patrzenie normalne (false) lub krzyżowe (true))\r\n  function handleSwitchStereoViewClick() {\r\n    setIsReversed(!isReversed);\r\n  }\r\n\r\n  function handleRequestFullscreen() {\r\n    // Jeśli w trybie fullscreen to wyjdź z fullscreen\r\n    if (document.fullscreenElement) {\r\n      document.exitFullscreen();\r\n    } else {\r\n      // Jeśli nie w trybie fullcreen to zażądaj fullscreen\r\n      if (containerRef.current.requestFullscreen) {\r\n        containerRef.current.requestFullscreen();\r\n      } else if (containerRef.current.webkitRequestFullscreen) {\r\n        // Safari\r\n        containerRef.current.webkitRequestFullscreen();\r\n      } else if (containerRef.current.msRequestFullscreen) {\r\n        // IE11\r\n        containerRef.current.msRequestFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{ display: \"flex\", width: \"100%\", height: \"100vh\" }}\r\n    >\r\n      <LeafletMap\r\n        style={{ width: \"50%\", height: \"100vh\" }}\r\n        whenReady={(event) => setLeftMap(event.target)}\r\n      >\r\n        <ZoomControl position={\"topright\"} />\r\n        <BackToMainPageControl />\r\n        <SwitchStereoViewTypeControl\r\n          isReversed={isReversed}\r\n          onClick={() => handleSwitchStereoViewClick()}\r\n        />\r\n        <FullScreenControl onClick={() => handleRequestFullscreen()} />\r\n        <FeatureGroup ref={leftImageRef} />\r\n      </LeafletMap>\r\n      <LeafletMap\r\n        style={{ width: \"50%\", height: \"100vh\" }}\r\n        whenReady={(event) => setRightMap(event.target)}\r\n      >\r\n        <ZoomControl position={\"topright\"} />\r\n        <BackToMainPageControl />\r\n        <SwitchStereoViewTypeControl\r\n          isReversed={isReversed}\r\n          onClick={() => handleSwitchStereoViewClick()}\r\n        />\r\n        <FullScreenControl onClick={() => handleRequestFullscreen()} />\r\n        <FeatureGroup ref={rightImageRef} />\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id);\r\n  }\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.complete}\r\n          onChange={handleTodoClick}\r\n        />\r\n        {todo.name}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return todos.map((todo) => {\r\n    return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />;\r\n  });\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\";\r\n\r\nexport default function Tutorial() {\r\n  const [todos, setTodos] = useState([]);\r\n  const todoNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    if (storedTodos) setTodos(storedTodos);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  function toggleTodo(id) {\r\n    const newTodos = [...todos];\r\n    const todo = newTodos.find((todo) => todo.id === id);\r\n    todo.complete = !todo.complete;\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value;\r\n    if (name === \"\") return;\r\n    setTodos((prevTodos) => {\r\n      return [...prevTodos, { id: Date.now(), name: name, complete: false }];\r\n    });\r\n    todoNameRef.current.value = null;\r\n  }\r\n\r\n  function handleClearTodos() {\r\n    const newTodos = todos.filter((todo) => !todo.complete);\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\r\n        <input ref={todoNameRef} type=\"text\" />\r\n        <button onClick={handleAddTodo}>Add Todo</button>\r\n        <button onClick={handleClearTodos}>Clear Completed</button>\r\n        <div>{todos.filter((todo) => !todo.complete).length} left to do</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Main from \"./components/Main\";\r\nimport StereoView from \"./components/StereoView\";\r\nimport Tutorial from \"./components/tutorial/Tutorial\";\r\nimport \"./App.css\";\r\nimport { AppContextProvider } from \"./context/appContext\";\r\nimport { colors } from \"./consts/colors\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  min-height: 100vh;\r\n  background-color: ${colors.gray100};\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <AppContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route path=\"/test-page\" component={Main} />\r\n            <Route path=\"/tutorial\" component={Tutorial} />\r\n            <Route path=\"/stereo-view\" component={StereoView} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </AppContextProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}